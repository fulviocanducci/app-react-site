{"version":3,"sources":["context/index.tsx","components/Form/index.tsx","components/List/index.tsx","components/App/index.tsx","reportWebVitals.ts","index.tsx"],"names":["GlobalContext","createContext","GlobalProvider","children","useState","todos","setTodos","Provider","value","Form","descriptionRef","useRef","description","setDescription","useContext","onSubmit","e","preventDefault","state","id","done","current","focus","className","htmlFor","ref","type","name","placeholder","onChange","target","List","length","map","a","b","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uLAiBIA,EAAgBC,wBAAwB,IAqB7BC,MAnBf,YAAkD,IAAxBC,EAAuB,EAAvBA,SACxB,EAA0BC,mBAAkB,IAA5C,mBAAOC,EAAP,KAAcC,EAAd,KACA,OACE,cAACN,EAAcO,SAAf,CAAwBC,MAAO,CAAEH,QAAOC,YAAxC,SACGH,KCqBQM,MAzCf,WACE,IAAMC,EAAiBC,iBAAgC,MACvD,EAAsCP,mBAAiB,IAAvD,mBAAOQ,EAAP,KAAoBC,EAApB,KACMP,ED4BeQ,qBAAWd,GAAxBM,SChBR,OACE,uBAAMS,SAZR,SAAsBC,GAOC,IAAD,EANpBA,EAAEC,iBACFX,GAAS,SAACY,GAAD,4BACJA,GADI,CAEP,CAAEC,GAAI,EAAGP,YAAaA,EAAaQ,MAAM,QAE3CP,EAAe,IACXH,IACF,UAAAA,EAAeW,eAAf,SAAwBC,UAI1B,UACE,sBAAKC,UAAU,YAAf,UACE,uBAAOC,QAAQ,QAAQD,UAAU,aAAjC,8BAGA,uBACEE,IAAKf,EACLgB,KAAK,OACLC,KAAK,cACLJ,UAAU,eACVJ,GAAG,QACHS,YAAY,kBACZpB,MAAOI,EACPiB,SAAU,SAACb,GAAD,OAAOH,EAAeG,EAAEc,OAAOtB,aAG7C,qBAAKe,UAAU,cAAf,SACE,wBAAQG,KAAK,SAASH,UAAU,kBAAhC,6BCpBOQ,MAdf,WACE,IAAM1B,EF0BYS,qBAAWd,GAArBK,MEzBR,OACE,gCACE,+CAAkBA,GAASA,EAAM2B,UACjC,8BACE,6BACG3B,GAASA,EAAM4B,KAAI,SAACC,EAAGC,GAAJ,OAAU,6BAAaD,EAAEtB,aAANuB,cCGlCC,MATf,WACE,OACE,sBAAKb,UAAU,YAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCOSc,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAE1Bb,M","file":"static/js/main.84e8fdaa.chunk.js","sourcesContent":["import React, { createContext, useContext, useState } from \"react\";\n\nexport interface ITodo {\n  id: number;\n  description: string;\n  done: boolean;\n}\n\ninterface IContext {\n  todos: ITodo[];\n  setTodos: React.Dispatch<React.SetStateAction<ITodo[]>>;\n}\n\nexport interface IChildren {\n  children: React.ReactNode;\n}\n\nvar GlobalContext = createContext<IContext>({} as IContext);\n\nfunction GlobalProvider({ children }: IChildren) {\n  const [todos, setTodos] = useState<ITodo[]>([]);\n  return (\n    <GlobalContext.Provider value={{ todos, setTodos }}>\n      {children}\n    </GlobalContext.Provider>\n  );\n}\n\nexport function useStateTodos() {\n  const { todos } = useContext(GlobalContext);\n  return todos;\n}\n\nexport function useSetTodos() {\n  const { setTodos } = useContext(GlobalContext);\n  return setTodos;\n}\n\nexport default GlobalProvider;\n","import { useRef, useState } from \"react\";\nimport { useSetTodos } from \"../../context\";\n\nfunction Form() {\n  const descriptionRef = useRef<HTMLInputElement | null>(null);\n  const [description, setDescription] = useState<string>(\"\");\n  const setTodos = useSetTodos();\n  function onFormSubmit(e: React.FormEvent<HTMLFormElement>): void {\n    e.preventDefault();\n    setTodos((state) => [\n      ...state,\n      { id: 1, description: description, done: false },\n    ]);\n    setDescription(\"\");\n    if (descriptionRef) {\n      descriptionRef.current?.focus();\n    }\n  }\n  return (\n    <form onSubmit={onFormSubmit}>\n      <div className=\"mb-3 mt-3\">\n        <label htmlFor=\"desc1\" className=\"form-label\">\n          Descrição:\n        </label>\n        <input\n          ref={descriptionRef}\n          type=\"text\"\n          name=\"description\"\n          className=\"form-control\"\n          id=\"desc1\"\n          placeholder=\"descrição\"\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n        />\n      </div>\n      <div className=\"text-center\">\n        <button type=\"submit\" className=\"btn btn-primary\">\n          Adicionar\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default Form;\n","import { useStateTodos } from \"../../context\";\n\nfunction List() {\n  const todos = useStateTodos();\n  return (\n    <div>\n      <div>Quantidade: {todos && todos.length}</div>\n      <div>\n        <ul>\n          {todos && todos.map((a, b) => <li key={b}>{a.description}</li>)}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default List;\n","import Form from \"../Form\";\nimport List from \"../List\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Form />\n      <List />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport GlobalProvider from \"./context\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalProvider>\n      <App />\n    </GlobalProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\nreportWebVitals();\n"],"sourceRoot":""}